// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// these things helps with type validation

generator nestgraphql {
  provider               = "node node_modules/prisma-nestjs-graphql"
  output                 = "../src/@generated/prisma-nestjs-graphql"
  fields_Validator_from  = "class-validator"
  fields_Validator_input = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//=========================
// Schemas start here
//========================

// <=== TODO: Add fields of my product, brought product, lent product and sold product ===>
model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  address   String?
  phone     Int?
  /// @Validator.IsEmail()
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[]
  // Rented     Rent[]
}
// <=== TODO: Add fields of rent ===>
model Product {
  id          Int      @id @default(autoincrement())
  userId      Int
  price       Int
  isSold      Int  @default(0)
  title       String
  /// @Validator.MinLength(3)
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  categories Category[]
  User       User?      @relation(fields: [userId], references: [id])
  // Rent       Rent[]
}

model Rent {
  id        Int      @id @default(autoincrement())
  userId    Int?
  productId Int?
  startData DateTime
  endDate   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // User    User?    @relation(fields: [userId], references: [id])
  // Product Product? @relation(fields: [productId], references: [id])
}

enum Role {
  ADMIN
  USER
}

enum Category {
  ELECTRONICS
  FURNITURE
  HOME_APPLIANCES
  SPORTING_GOODS
  OUTDOOR
  TOYS
}
