scalar DateTime


enum Role {
  ADMIN
  USER
}

type User {
  # User Scheme
  id: Int!
  firstName: String!
  lastName: String!
  address: String
  phone: Int
  email: String!
  role: Role!
  createdAt: DateTime
  updatedAt: DateTime
  products: [Product!]
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  address: String
  phone: Int
  email: String!
  role: Role!
  createdAt: DateTime
  updatedAt: DateTime
}

input UpdateUserInput {
  firstName: String
  lastName: String
  address: String
  phone: Int
  email: String
  role: Role
  createdAt: DateTime
  updatedAt: DateTime
}

type Query {
  users: [User]!
  user(id: Int!): User
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(id: Int!, updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User
}
