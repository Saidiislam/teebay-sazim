scalar DateTime

enum Category {
  ELECTRONICS
  FURNITURE
  HOME_APPLIANCES
  SPORTING_GOODS
  OUTDOOR
  TOYS
}

enum Status {
  UNSOLD
  SOLD
  LENT
  BROUGHT
  BORROWED
}

type Product {
  # Product Scheme
  id: Int!
  status: Status!
  userId: Int!
  price: Int!
  rentPrice: Int!
  rentFrom: DateTime
  rentTo: DateTime
  title: String!
  description: String!
  createdAt: DateTime
  updatedAt: DateTime

  categories: [Category!]!
  User: User
}

input CreateProductInput {
  # Create Product Scheme
  status: Status
  userId: Int!
  price: Int!
  rentPrice: Int!
  rentFrom: DateTime
  rentTo: DateTime
  title: String!
  description: String!
  createdAt: DateTime
  updatedAt: DateTime

  categories: [Category!]!
}

input UpdateProductInput {
  status: Status
  userId: Int
  price: Int
  rentPrice: Int
  rentFrom: DateTime
  rentTo: DateTime
  title: String
  description: String
  createdAt: DateTime
  updatedAt: DateTime

  categories: [Category!]
}

input OrderByParams {
  field: String
  direction: String
}

input FilterByParams {
  filterBy: String
  filterValue: String
}

input FilterByNums {
  filterNumBy: String
  filterNumValue: Int
}

type Query {
  products(
    orderBy: OrderByParams
    filter: FilterByParams
    filterNum: FilterByNums
  ): [Product]!
  product(id: Int!): Product
}

type Mutation {
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(id: Int!, createUpdateInput: UpdateProductInput!): Product
  removeProduct(id: Int!): Product
}
